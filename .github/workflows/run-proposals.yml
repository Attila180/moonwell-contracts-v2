name: "Run Proposals"

env:
    FOUNDRY_PROFILE: "ci"

on:
    workflow_dispatch:
    pull_request:
    push:
        branches:
            - "main"

jobs:
    run-proposals:
        permissions:
            pull-requests: write
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v3
              with:
                  submodules: "recursive"

            - name: "Install Foundry"
              uses: "foundry-rs/foundry-toolchain@v1"

            - name: Get Changed Files
              id: files
              uses: jitterbit/get-changed-files@v1
              with:
                  format: "space-delimited"

            - name: Set PR_CHANGED_FILES
              run: echo "PR_CHANGED_FILES=${{ steps.files.outputs.all }}" >> $GITHUB_ENV

            - name: Set DEBUG flag
              run: echo "DEBUG=true" >> $GITHUB_ENV

            - name: Set PROPOSALS_FOLDER
              run: echo "PROPOSALS_FOLDER=src/proposals/mips" >> $GITHUB_ENV

            - name: List and Delete Previous Comments
              uses: actions/github-script@v6
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  script: |
                      const issue_number = context.payload.pull_request.number;
                      const comments = await github.rest.issues.listComments({
                        ...context.repo,
                        issue_number: issue_number
                      });

                      const actionComments = comments.data.filter(comment => comment.user.login === 'github-actions[bot]');

                      if (actionComments.length === 0) {
                        return;
                      }
                      for (const comment of actionComments) {
                        await github.rest.issues.deleteComment({
                          ...context.repo,
                          comment_id: comment.id,
                        });
                      }

            - name: Run Proposals
              run: chmod +x ./run-proposal.sh 

            - name: List files in the current directory
              run: ls -lah
            
            - name: Show current working directory
              run: pwd

            - name: Check if output.json exists
              id: check_output
              run: |
                  if [ -f output.json ]; then
                      echo "EXISTS=true" >> $GITHUB_ENV
                  else
                      echo "EXISTS=false" >> $GITHUB_ENV
                  fi

            - name: Comment PR with Proposal Output
              if: env.EXISTS == 'true'
              uses: actions/github-script@v6
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  script: |
                      const fs = require('fs');
                      if (fs.existsSync('output.json')) {
                          const outputs = JSON.parse(fs.readFileSync('output.json', 'utf8')).results;
                          const prNumber = context.payload.pull_request.number;
                          outputs.forEach(output => {
                              github.rest.issues.createComment({
                                ...context.repo,
                                issue_number: prNumber,
                                body: `### Proposal output for ${output.file}:\n\`\`\`\n${output.output}\n\`\`\``
                              });
                          });
                      }
